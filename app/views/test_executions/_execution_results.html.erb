<%
#
# renders the errors for the most recent test execution for the given task.
#
# must specify local variable "execution"
#
%>

<% case execution.status_with_sibling %>
<% when 'incomplete' %>
  <p class="lead row bg-info execution-status"><i class="fa fa-fw fa-refresh fa-spin text-info"></i> In Progress</p>
  <p>You do not need to reload your browser. Results will automatically display when the tests are done running.</p>
  <% # ajax contacts test_execution's show controller action with format: 'js'. controller then directs to show.js.erb which will wait, then re-render %>
  <script>
    $.ajax({url: "<%= request.env['PATH_INFO'] %>", type: "GET", dataType: 'script', data: { partial: 'execution_results' }});
  </script>

<% when 'passing' %>
  <p class="lead row bg-success execution-status"><i class="fa fa-fw fa-check-circle text-success"></i> Passed</p>
  <% if execution.task.product_test.product.c3_test && execution.task.product_test._type == 'MeasureTest' %>
    <% submit_warnings = execution.sibling_execution.execution_errors.only_warnings %>
    <%= render partial: 'test_executions/results/error_table', locals: { errors: submit_warnings, message_title: 'Warning' } if submit_warnings.any? %>
  <% end %>

<% else # failing %>

  <p class="lead row bg-danger execution-status">
    <i class="fa fa-fw fa-times-circle text-danger" aria-hidden="true"></i>
    <%= execution_failure_message(execution) %>
  </p>

  <h2>Missing or Duplicate Files</h2>
  <ul class="fa-ul">
    <% execution.execution_errors.by_file(nil).each do |error| %>
      <li><i class="fa-li fa fa-times" aria-hidden="true"></i> <%= error.message %></li>
    <% end %>
  </ul>

  <h2>Errors and Warnings</h2>

  <% all_file_names = execution.artifact.file_names %>
  <% error_maps = get_error_mapping(execution) %>
  <% sibling_error_maps = get_error_mapping(execution.sibling_execution) if execution.sibling_execution %>
  <% all_error_maps = sibling_error_maps ? (error_maps + sibling_error_maps) : error_maps %>

  <div id="xml-tabs" class="short-tabs">
    <ul>
      <% all_file_names.each do |file_name| %>
        <% error_map = all_error_maps.select { |e| e[:file] == file_name } %>
        <li>
          <a href="#<%= file_name %>">
            <%= file_name %>
            <%= render partial: 'test_executions/results/error_status', locals: { errors: error_map.map(&:file_errors).flatten } %>
          </a>
        </li>
      <% end %>
    </ul>

    <% all_file_names.each do |file_name| %>
      <div id="<%= file_name %>">
        <% error_map = all_error_maps.select { |e| e[:file] == file_name } %>

        <% if error_map.count == 0 %>
          <p class="lead text-success">
            <i class="fa fa-fw fa-check" aria-hidden="true"> No errors found!
          </p>
        <% else %>
          <%= render partial: 'test_executions/results/file_result', :locals => { test_execution: execution, file_name: file_name, errors: error_map.map(&:file_errors) } %>

          <% if error_map.map(&:file_errors).map(&:qrda_errors).flatten.compact.length > 0 %>
            <div class="xml-view">
              <%= render partial: "test_executions/results/xmlnav" %>
              <h3>Uploaded File</h3>

              <% error_map.each do |e| %>
                <div class="xml-frame">
                  <%= render partial: 'test_executions/results/node', :locals => { doc: e[:doc], error_map: e[:error_map], error_attributes: e[:error_attributes], execution_errors: e[:file_errors] } %>
                </div>
              <% end %>
            </div>
          <% end %>

        <% end %>
      </div>
    <% end %>
  </div>

<% end %>
